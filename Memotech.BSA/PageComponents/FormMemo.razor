@using Memotech.BSA.Helpers
<EditForm Model="Memo" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="row g-3">
        <div class="col-12">
            <label for="txtMemoTerm" class="form-label">Term</label>
            <input type="text" id="txtMemoTerm" class="form-control" @bind-value="Memo.Term"/>
            <ValidationMessage For="() => Memo.Term" />
        </div>
        <div class="col-12">
            <label for="txtMemoMeaning" class="form-label">Meaning</label>
            <input type="text" id="txtMemoMeaning" class="form-control" @bind-value="Memo.Meaning"/>
            <ValidationMessage For="() => Memo.Meaning" />
        </div>
        <div class="col-12">
            <label for="ddlMemoType" class="form-label">Meaning</label>
            <select id="ddlMemoType" class="form-control" @bind="Memo.TypeId">
                <option value="-1">Select type ...</option>
                @foreach (MemoTypes type in Enum.GetValues(typeof(MemoTypes)))
                {
                    <option value="@GetTypeId(type)">@type</option>
                }
            </select>
            <ValidationMessage For="() => Memo.TypeId" />
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public Memo Memo { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    int GetTypeId(MemoTypes type)
    {
        return (int)type;
    }
}
