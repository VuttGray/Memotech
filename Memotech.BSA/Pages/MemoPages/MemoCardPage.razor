@page "/memos/card"
@inject IMemoService service

@if (memo != null)
{
    <div class="card mx-auto text-center" style="max-width: 600px">
        <div class="card-header">
            <h3>Do you know this word?</h3>
        </div>
        <div class="card-body">
            <h2 class="card-title">@memo.Term</h2>
            @if (showMeaning)
            {
                <p class="card-text">@memo.Meaning</p>
                <div class=text-start>
                    <MarkdownRenderer MarkdownContent="@memo.Info"/>
                </div>
            }
        </div>
        <dic class="card-footer">
            @if (showMeaning)
            {
                <button class="btn btn-outline-secondary" @onclick="MarkAsStudied">I know the memo</button>
                <button class="btn btn-success" @onclick="MarkAsKnown">Yes, I remember it!</button>
                <button class="btn btn-warning" @onclick="MarkAsUnknown">No, I don't</button>
            }
            else
            {
                <button class="btn btn-primary" @onclick="ShowMeaning">Show meaning</button>
            }
        </dic>
    </div>

    <hr />
    <p>@message</p>
}
else
{
    <h2 class="text-center">No memos to study</h2>
}

@code {
    Memo memo = new();
    string message = "";
    bool showMeaning;

    protected override void OnInitialized()
    {
        SelectMemo();
    }

    void SelectMemo()
    {
        memo = service.GetMemoToStudy();
        showMeaning = false;
    }

    void ShowMeaning()
    {
        showMeaning = true;
    }

    void MarkAsStudied()
    {
        service.MarkAsStudied(memo);
        SelectMemo();
    }

    void MarkAsKnown()
    {
        service.AddStudyStage(memo, StudyStages.Know);
        SelectMemo();
    }

    void MarkAsUnknown()
    {
        service.AddStudyStage(memo, StudyStages.DontKnow);
        SelectMemo();
    }
}
