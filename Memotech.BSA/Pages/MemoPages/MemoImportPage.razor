@page "/memos/import"
@inject IMemoService memoService
@inject IMemoSetService memoSetService

<h3>Import memos</h3>

<div class="row">
    <input class="form-control m-2" type="text" @bind="@memoSetNames" placeholder="Memo set name"/>
    <textarea class="form-control m-2" @bind="@memosToImport" rows="20" 
        placeholder="Paste here the memos to import..." />

    @if (!string.IsNullOrWhiteSpace(message))
    {
        <p class="@messageClass">@message</p>
        message = "";
    }
</div>
<button type="button" class="btn btn-outline-primary" @onclick=@ImportMemos>Import</button>

@code {
    string memosToImport = "";
    string message = "";
    string messageClass = "";
    string memoSetNames = "";

    private void ImportMemos()
    {
        try
        {
            var memoSets = GetMemoSets();
            memoService.AddRangeFromText(memosToImport, memoSets);

            message = "Memos were successfully imported";
            messageClass = "alert-success";
            memoSetNames = "";
            memosToImport = "";
        }
        catch (ArgumentException ex)
        {
            message = ex.Message;
            messageClass = "alert-danger";
        }
    }

    private List<MemoSet> GetMemoSets()
    {
        if (string.IsNullOrWhiteSpace(memoSetNames)) return new List<MemoSet>();

        var memoSets = new List<MemoSet>();
        foreach (var setName in memoSetNames.Split(";").ToList())
        {
            var memoSet = memoSetService
                .GetAll()
                .FirstOrDefault(ms => ms.Name.Equals(setName.Trim(), StringComparison.InvariantCultureIgnoreCase));
            if (memoSet == null)
            {
                memoSet = new MemoSet() { Name = setName };
                memoSetService.Add(memoSet);
            }
            memoSets.Add(memoSet);
        }
        return memoSets;
    }
}
